{"version":3,"sources":["components/Navbar.js","components/Login.js","components/utils.js","components/Test.js","components/User.js","components/Signup.js","components/Groupchat.js","App.js","serviceWorker.js","index.js","assets/images/logo.jpg"],"names":["Navbar","props","logout","axios","get","then","res","logOut","history","replace","catch","err","console","log","toggleCollapse","setState","isOpen","state","bind","userHandle","this","isLogin","right","to","onClick","color","dark","expand","className","style","maxWidth","src","logo","alt","id","navbar","left","Component","Login","_token","email","password","message","isLoading","onSubmit","e","data","_csrf","method","url","logIn","response","onChange","target","name","value","btnOrLoad","info","Object","keys","length","type","messages","role","gradient","rounded","md","label","icon","group","validate","error","success","href","obj","blobToBase64","blob","callback","reader","FileReader","onload","base64","result","split","readAsDataURL","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","decryptAES","text","secret","decipher","crypto","createDecipher","dec","update","final","encryptAES","cipher","createCipher","crypted","decrypt","content","privateKey","crypt","JSEncrypt","default_key_size","setPrivateKey","encrypt","publicKey","setPublicKey","randomString","len","randomBytes","toString","WebcamCapture","image","setRef","webcam","capture","imageSrc","getScreenshot","cypher","utils","decypher","setInterval","intervalId","User","results","users","_id","profilePic","toggle","modal","toggle2","modal2","user","friend","videoCall","sendVideo","notifications","promptForAudio","modal3","call","play","inCall","otherSecret","otherPublicKey","roomValue","audio","Audio","loop","sendRequest","updateUser","acceptRequest","viewprofile","sendAudio","sendSecret","pause","cutCall","cutCallSocket","inComeCall","getNotification","key","test","currentTime","clearInterval","pubKey","room","from","isVideo","stopUpdate","item","friends","canSendReq","pic","newFriend","getPrivateKey","getPublicKey","socket","on","openPrompt","msg","closePrompt","emit","st","stream","photo","navigator","mediaDevices","getUserMedia","echoCancellation","noiseSuppression","sampleRate","mediaRecorder","MediaRecorder","start","addEventListener","event","base64String","stop","b64st","audioUrl","URL","createObjectURL","button","videoConstraints","width","height","facingMode","isFriend","disabled","centered","waves","search","borderRadius","notification","isOnline","modalCall","modalCallIn","imageOrCall","ref","screenshotFormat","imageOrCall2","side","position","infinite","size","toggle3","preventDefault","placeholder","aria-label","togglePrompt","Signup","confirmPassword","Groupchat","onChangeMess","sendMessage","join","userName","mes","React","Video","title","allowfullscreen","App","path","component","Test","Boolean","window","location","hostname","match","io","proxy","p2pCon","p2p","numClients","usePeerConnection","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.292df178.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport logo from '../assets/images/logo.jpg'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse } from \"mdbreact\";\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    isOpen: false,\n  }\n  this.logout = this.logout.bind(this);\n}\nlogout = () => {\n  axios.get('/api/user/logout').then((res)=>{\n    this.props.logOut();\n    this.props.history.replace('/signin')\n  }).catch((err)=>{\n    console.log(err);\n  })\n}\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });\n}\nrender() {\n  var userHandle;\n  if(!this.props.isLogin) {\n    userHandle = (\n      <MDBNavbarNav right>\n        <MDBNavItem>\n          <MDBNavLink to=\"signin\">Sign In</MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem>\n          <MDBNavLink to=\"signup\">Sign up</MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n    )\n  } else {\n    userHandle = (\n      <MDBNavbarNav right>\n        <MDBNavItem>\n          <MDBNavLink to=\"user\">Profile</MDBNavLink>\n        </MDBNavItem>\n        <MDBNavItem>\n          <MDBNavLink onClick={this.logout} to=\"#\">Logout</MDBNavLink>\n        </MDBNavItem>\n      </MDBNavbarNav>\n    )\n  }\n  return (\n    <MDBNavbar color=\"primary-color\" dark expand=\"md\">\n      <div className=\"container\">\n        <MDBNavbarBrand>\n          <strong className=\"white-text\"><img style={{maxWidth:\"50px\"}} src={logo} alt={logo}/> E2Ecalls</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <MDBNavLink to=\"\">Home</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/groupchat\">Group Chat</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/test\">API</MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n              {userHandle}\n        </MDBCollapse>\n        </div>\n    </MDBNavbar>\n    );\n  }\n};\n\nNavbar.propTypes = {\n  isLogin: PropTypes.bool,\n  logOut: PropTypes.func\n};\n\nexport default Navbar;\n","import React, { Component, Fragment } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBModalFooter } from 'mdbreact';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  _token = '';\n  state = {\n    email:'',\n    password: '',\n    message: {},\n    isLoading: false\n  }\n  componentWillMount() {\n    axios.get('/api/user/signin').then((res)=>{\n      this._token = res.data._token;\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n  onSubmit = (e) => {\n    this.setState({\n      isLoading:true\n    })\n    var data = {\n      email: this.state.email ,\n      password: this.state.password ,\n      _csrf: this._token,\n      message: {},\n    }\n    axios({\n      method: 'post',\n      url: '/api/user/signin',\n      data: data\n    }).then((res) => {\n      this.props.logIn();\n      this.props.history.replace('/user');\n    }).catch((err) => {\n      this.setState({isLoading:false,message: err.response.data});\n    })\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    let info = {}\n    if( !(Object.keys(this.state.message).length === 0) ) {\n      var type = Object.keys(this.state.message)[0];\n      info = {\n        messages: (\n          <Fragment>\n            <div className={\"alert alert-\"+type}>\n              <strong>{this.state.message[type]}</strong>\n            </div>\n          </Fragment>\n        )\n      }\n    }\n    let btnOrLoad;\n    if(this.state.isLoading) {\n      btnOrLoad = (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      )\n    } else {\n      btnOrLoad = (\n        <MDBBtn\n          type=\"button\"\n          gradient=\"blue\"\n          onClick={this.onSubmit}\n          rounded\n          className=\"btn-block z-depth-1a\"\n        >\n          Sign in\n        </MDBBtn>\n      )\n    }\n    return (\n      <MDBContainer>\n      <br/>\n      <br/>\n    <MDBRow className=\"justify-content-center\">\n      <MDBCol style={{maxWidth:\"600px\"}} md=\"12\">\n        <MDBCard>\n          <MDBCardBody className=\"mx-4\">\n            <div className=\"text-center\">\n              <h3 className=\"dark-grey-text mb-5\">\n                <strong>Sign in</strong>\n              </h3>\n            </div>\n            <div className=\"grey-text\">\n            <MDBInput\n              label=\"Your email\"\n              icon=\"envelope\"\n              group\n              value={this.state.email}\n              name=\"email\"\n              onChange={this.onChange}\n              type=\"email\"\n              validate\n              error=\"wrong\"\n              success=\"right\"\n            />\n          <MDBInput\n              label=\"Your password\"\n              icon=\"lock\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.onChange}\n              group\n              type=\"password\"\n              validate\n            />\n        </div>\n            <p className=\"font-small blue-text d-flex justify-content-end pb-3\">\n              Forgot\n              <a href=\"#!\" className=\"blue-text ml-1\">\n\n                Password?\n              </a>\n            </p>\n            {info['messages']}\n            <div className=\"text-center mb-3\">\n              {btnOrLoad}\n            </div>\n\n          </MDBCardBody>\n\n          <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n            <p className=\"font-small grey-text d-flex justify-content-end\">\n              Not a member?\n              <Link to=\"/signup\" className=\"blue-text ml-1\">\n\n                Sign Up\n              </Link>\n            </p>\n          </MDBModalFooter>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n    );\n  }\n};\n\n\nexport default Login;\n","import JSEncrypt from 'jsencrypt';\nimport crypto from 'crypto';\n\nlet encrypt =  (content, publicKey) => {\n  let crypt = new JSEncrypt({default_key_size: 512});\n  crypt.setPublicKey(publicKey)\n  return crypt.encrypt(content)\n}\nlet decrypt =  (content,privateKey) => {\n  let crypt = new JSEncrypt({default_key_size: 512});\n  crypt.setPrivateKey(privateKey);\n  return crypt.decrypt(content);\n}\n\nlet encryptAES = (text,secret)=>{\n  let cipher = crypto.createCipher('aes-256-ctr',secret)\n  let crypted = cipher.update(text,'utf8','hex')\n  crypted += cipher.final('hex');\n  return crypted;\n}\n\n\nlet decryptAES = (text,secret) => {\n  let decipher = crypto.createDecipher('aes-256-ctr',secret)\n  let dec = decipher.update(text,'hex','utf8')\n  dec += decipher.final('utf8');\n  return dec;\n}\n\nlet b64toBlob = (b64Data, contentType, sliceSize)=> {\n  contentType = contentType || '';\n  sliceSize = sliceSize || 512;\n  let byteCharacters = atob(b64Data);\n  let byteArrays = [];\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    let byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n    let byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n  let blob = new Blob(byteArrays, {type: contentType});\n  return blob;\n}\n\nlet blobToBase64 = (blob, callback)=>{\n  let reader = new FileReader();\n  reader.onload = function() {\n      let dataUrl = reader.result;\n      let base64 = dataUrl.split(',')[1];\n      callback(base64);\n  };\n  reader.readAsDataURL(blob);\n}\n\nlet randomString = (len = 10)=>{\n  return crypto.randomBytes(len).toString('hex');\n}\n\nlet obj = {\n  blobToBase64: blobToBase64,\n  b64toBlob: b64toBlob,\n  decryptAES: decryptAES,\n  encryptAES: encryptAES,\n  decrypt: decrypt,\n  encrypt: encrypt,\n  randomString:randomString\n}\n\n\nexport default obj\n","import React, { Component } from 'react';\nimport utils from './utils';\n\nclass WebcamCapture extends Component {\n  state = {\n    image : ''\n  }\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n  componentDidMount() {\n    setInterval(this.capture,40)\n  }\n  capture = () => {\n    try{\n      let imageSrc = this.webcam.getScreenshot();\n      let cypher = utils.encryptAES(imageSrc,'qwerty1234qwerty');\n      let decypher = utils.decryptAES(cypher,'qwerty1234qwerty')\n      this.setState({image: decypher});\n    } catch(err){\n      console.log(err);\n    }\n  };\n\n  render() {\n    \n\n    return (\n      <div>\n\n      <img alt={this.state.image} src={this.state.image}/>\n        <button onClick={this.capture}>Capture photo</button>\n      </div>\n    );\n  }\n}\nexport default WebcamCapture;\n","import React, { Component } from 'react';\nimport { MDBCol,MDBRow,MDBContainer, MDBAnimation, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter,MDBCard,MDBCardBody,MDBCardImage ,MDBCardTitle, MDBBtn, MDBFormInline, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport Webcam from 'react-webcam'\nimport JSEncrypt from 'jsencrypt';\nimport utils from './utils'\n\nlet intervalId = 0;\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user : props.user,\n      results: [],\n      friend: {},\n      videoCall: false,\n      isLoading: true,\n      sendVideo: false,\n      notifications: [],\n      image:'/defaultPic.png',\n      promptForAudio: false,\n      modal: false,\n      modal2: false,\n      modal3: false,\n      call:{},\n      play:false,\n      inCall:{}\n    }\n    this.privateKey = '';\n    this.publicKey = '';\n    this.otherSecret = '';\n    this.otherPublicKey = '';\n    this.roomValue = '';\n    this.secret = '';\n    this.url = \"/ringtone.mp3\";\n    this.audio = new Audio(this.url);\n    this.audio.loop = true;\n    this.sendRequest = this.sendRequest.bind(this);\n    this.call = this.call.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.acceptRequest = this.acceptRequest.bind(this);\n    this.viewprofile = this.viewprofile.bind(this);\n    this.play = this.play.bind(this);\n    this.sendAudio = this.sendAudio.bind(this);\n    this.sendSecret = this.sendSecret.bind(this)\n    this.pause = this.pause.bind(this);\n    this.cutCall = this.cutCall.bind(this);\n    this.cutCallSocket = this.cutCallSocket.bind(this);\n    this.inComeCall = this.inComeCall.bind(this);\n    this.getNotification = this.getNotification.bind(this);\n  }\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n  togglePrompt() {\n    this.setState({\n      promptForAudio:!this.state.promptForAudio\n    })\n  }\n  openPrompt() {\n    this.setState({\n      promptForAudio:true\n    })\n  }\n  closePrompt() {\n    this.setState({\n      promptForAudio:false\n    })\n  }\n  sendSecret(id){\n    let cypher = utils.encrypt(this.secret,this.otherPublicKey);\n    axios({\n      method: 'post',\n      url: '/api/secret',\n      data: {\n        id: id,\n        key: this.publicKey,\n        cypher: cypher\n      }\n    }).then((res) => {\n      this.test();\n    }).catch((err) => {\n      console.log(err.response);\n    })\n  }\n  play() {\n    if(this.state.play === true) {\n      this.audio.currentTime = 0.0;\n      this.audio.play();\n    }\n  }\n  pause() {\n    if(this.state.play === false) {\n      this.audio.currentTime = 0.0;\n      this.audio.pause();\n    }\n  }\n  cutCall(id) {\n    this.setState({\n      inCall: {},\n      modal3: false,\n      modal2: false,\n      play: false\n    });\n    clearInterval(intervalId);\n    axios.get('/api/endcall?id='+id).then((res)=>{console.log(res); this.pause();}).catch((err)=>{console.log(err.response); this.pause();});\n  }\n  cutCallSocket() {\n    this.setState({\n      inCall: {},\n      modal3: false,\n      modal2: false,\n      play: false\n    });\n    clearInterval(intervalId)\n    this.pause();\n  }\n  inComeCall(data){\n    this.otherPublicKey = data.pubKey;\n    this.roomValue = data.room;\n    this.setState({\n      inCall: data.from,\n      modal3: true,\n      play:true,\n      videoCall:data.isVideo\n    });\n    this.play();\n  }\n  stopUpdate() {\n    clearInterval(this.update);\n  }\n  componentWillUnmount() {\n    this.stopUpdate();\n  }\n  getNotification() {\n    axios.get('/api/notification').then((result) => {\n      this.setState({\n        notifications: result.data.user\n      })\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n  call(item,videoCall = false) {\n    this.setState({\n      call:item,\n      modal2: !this.state.modal2,\n      videoCall: videoCall\n    });\n    let obj = {\n      id: item._id,\n      roomValue: this.roomValue,\n      key: this.publicKey,\n      isVideo: videoCall\n    };\n    axios({\n      method: 'post',\n      url: '/api/call',\n      data: obj\n    }).then((res) => {\n      console.log(res);\n    }).catch((err) => {\n      console.log(err.response);\n    })\n  }\n  viewprofile(id) {\n    axios.get('/api/viewprofile?id='+id).then((result) => {\n      this.setState({\n        friend:result.data\n      })\n      console.log(this.state.friend);\n      this.toggle();\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n  updateUser() {\n    axios.get('/api/isonline').then((result)=>{\n      let user = this.state.user;\n      user.friends = result.data.user.friends;\n      this.setState({\n        user:user\n      })\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n  sendRequest(id) {\n    axios.get(\"/api/sendRequest?id=\"+id).then((result) => {\n      let friend = this.state.friend;\n      friend.canSendReq = false;\n      this.setState({\n        friend:friend\n      })\n    }).catch((err)=> {\n      console.log(err.response);\n    })\n  }\n  acceptRequest(id,name,pic,_id) {\n    let newFriend = {\n      _id :_id,\n      name: name,\n      profilePic:pic\n    }\n    axios.get(\"/api/accept?id=\"+id).then((result) => {\n      this.getNotification();\n      let user = this.state.user;\n      user.friends.push(newFriend);\n      this.setState({\n        user:user\n      })\n    }).catch((err)=> {\n      console.log(err.response);\n    })\n  }\n  componentDidMount() {\n    this.getNotification();\n    this.crypt = new JSEncrypt({default_key_size: 512});\n    this.privateKey = this.crypt.getPrivateKey();\n    this.publicKey = this.crypt.getPublicKey();\n    this.secret = utils.randomString();\n    this.roomValue = utils.randomString(32);\n    this.setState({\n      isLoading:false\n    })\n    this.props.socket.on('calling', (data) => {this.inComeCall(data); });\n    this.props.socket.on('getCypher', (data) => {\n      this.otherPublicKey = data.key;\n      this.otherSecret = utils.decrypt(data.cypher,this.privateKey);\n      let cypher = utils.encrypt(this.secret,this.otherPublicKey);\n      let obj =  {\n        id: data.id,\n        cypher: cypher\n      }\n      axios({\n        method: 'post',\n        url: '/api/exchange',\n        data: obj\n      }).then((res) => {\n        this.openPrompt();\n      }).catch((err) => {\n        console.log(err.response);\n      });\n    });\n    let socket = this.props.socket;\n    socket.on('cypherShare', (data) => {\n      this.otherSecret = utils.decrypt(data.cypher,this.privateKey);\n      this.openPrompt();\n    });\n    this.props.socket.on('end', (msg) => {this.cutCallSocket()});\n  }\n  sendAudio() {\n    let socket = this.props.socket\n    this.setState({\n      play:false\n    })\n    this.audio.currentTime = 0.0;\n    this.audio.pause();\n    this.closePrompt();\n    let room = this.roomValue;\n    let secret = this.otherSecret;\n    if(this.state.videoCall) {\n      let id = setInterval(()=>{\n        try{\n          let cypher = utils.encryptAES(this.webcam.getScreenshot(),this.otherSecret);\n          socket.emit(room,{st:cypher});\n        } catch(err) {\n          console.log(err);\n          clearInterval(id)\n        }\n      },200);\n      socket.on(room,(stream)=>{\n        try {\n          let photo = utils.decryptAES(stream.st,this.secret);\n          this.setState({image: photo});\n        } catch(err) {\n          console.log(err);\n        }\n      })\n    } else {\n      navigator.mediaDevices.getUserMedia({audio:{\n        echoCancellation: true,\n        noiseSuppression: true,\n        sampleRate: 44100\n      }}).then(function(stream) {\n          let mediaRecorder = new MediaRecorder(stream);\n          mediaRecorder.start();\n          mediaRecorder.addEventListener('dataavailable',(event) => {\n            utils.blobToBase64(event.data,(base64String)=>{\n              let st = utils.encryptAES(base64String,secret);\n              socket.emit(room,{st:st});\n            })\n          })\n          mediaRecorder.addEventListener('stop',(event) => {\n            mediaRecorder.start();\n          })\n          intervalId = setInterval(()=>{\n            mediaRecorder.stop()\n          },3000);\n        })\n        .catch(function(err) {\n          console.log(err);\n        });\n        socket.on(this.roomValue,(stream)=>{\n          try {\n            let b64st = utils.decryptAES(stream.st,this.secret);\n            let blob = utils.b64toBlob(b64st);\n            const audioUrl = URL.createObjectURL(blob);\n            console.log(audioUrl);\n            const audio = new Audio(audioUrl);\n            audio.play();\n          } catch(err) {\n            console.log(err);\n          }\n        })\n    }\n  }\n  onChange = (e) => {\n    if(e.target.value.length >= 3) {\n      axios.get('/api/search?name='+e.target.value).then((result) => {\n        this.setState({ results: result.data.users });\n      }).catch((err) => {\n        this.setState({ results: [{_id:0, email:'',profilePic:'/record.png',name:'No Record Found'}] });\n      })\n    } else {\n      this.setState({ results: [] });\n    }\n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  toggle2 = () => {\n    this.setState({\n      modal2: !this.state.modal2\n    });\n  }\n  render() {\n    const videoConstraints = {\n      width: 350,\n      height: 350,\n      facingMode: \"user\"\n    };\n    console.log(this.roomValue);\n    let modal;\n    if(Object.keys(this.state.friend).length > 0) {\n      let button;\n      if(this.state.friend.isFriend){\n        button = (\n          <MDBBtn color=\"success\">call</MDBBtn>\n        )\n      } else {\n        if(this.state.friend.canSendReq) {\n          button = (\n            <MDBBtn onClick={() => {this.sendRequest(this.state.friend.user._id)}} color=\"secondary\">Send Request</MDBBtn>\n          )\n        } else {\n          button = (\n            <MDBBtn disabled color=\"dark\">Send Request</MDBBtn>\n          )\n        }\n      }\n      modal = (\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle} centered>\n          <MDBModalHeader toggle={this.toggle}>{this.state.friend.user.name}</MDBModalHeader>\n          <MDBModalBody >\n            <MDBCardImage className=\"justify-content-center img-fluid\" src={this.state.friend.user.profilePic} waves />\n          </MDBModalBody>\n          <MDBModalFooter>\n            {button}\n          </MDBModalFooter>\n        </MDBModal>\n      )\n    } else {\n      modal = (\n        <div></div>\n      )\n    }\n    let search = [];\n    for(let item of this.state.results) {\n      search.push((\n          <MDBCardBody key={item._id}>\n            <img style={{maxWidth:\"50px\"}} src={item.profilePic} alt={item.profilePic}/>{item.name}\n            <MDBBtn style={{borderRadius:\"50px\"}} className=\"btn-sm float-right\" color=\"danger\" href={\"mailto:\"+item.email}>{item.email}</MDBBtn>\n            <MDBBtn style={{borderRadius:\"50px\"}} className=\"btn-sm float-right\" color=\"primary\" onClick={() => {this.viewprofile(item._id)}}>View Profile</MDBBtn>\n          </MDBCardBody>\n      ))\n    }\n    let notification = [];\n    for(let item of this.state.notifications) {\n      notification.push((\n        <MDBCardBody key={item._id}>\n          <img style={{maxWidth:\"50px\"}} src={item.from.profilePic} alt={item.from.profilePic}/>{item.from.name}\n          <MDBBtn style={{borderRadius:\"50px\"}} className=\"btn-sm float-right\" color=\"primary\" onClick={() => {this.acceptRequest(item._id,item.from.name,item.from.profilePic,item.from._id)}}>Accept Request</MDBBtn>\n        </MDBCardBody>\n      ))\n    }\n    if(Object.keys(this.state.user).length > 0 && this.state.isLoading === false) {\n      let friends = [];\n      for(let item of this.state.user.friends) {\n        if(item.isOnline){\n          friends.push((\n            <MDBCardBody key={item._id}>\n              <img style={{maxWidth:\"50px\"}} src={item.profilePic} alt={item.profilePic}/>{item.name}\n              <span style={{color:'green'}}> online</span>\n              <MDBBtn className=\"btn-sm float-right\" color=\"success\" onClick={() => {this.call(item,false)}}>Call</MDBBtn>\n              <MDBBtn className=\"btn-sm float-right\" color=\"success\" onClick={() => {this.call(item,true)}}>Video Call</MDBBtn>\n            </MDBCardBody>\n          ))\n        } else {\n          friends.push((\n            <MDBCardBody key={item._id}>\n              <img style={{maxWidth:\"50px\"}} src={item.profilePic} alt={item.profilePic}/>{item.name}\n              <span style={{color:'red'}}> offline</span>\n              <MDBBtn className=\"btn-sm float-right\" color=\"success\" onClick={() => {this.call(item,false)}}>Call</MDBBtn>\n              <MDBBtn className=\"btn-sm float-right\" color=\"success\" onClick={() => {this.call(item,true)}}>Video Call</MDBBtn>\n            </MDBCardBody>\n          ))\n        }\n      }\n      let imageOrCall = '';\n      if(this.state.videoCall === true) {\n        console.log('true');\n        imageOrCall = (\n          <div>\n\n            <img src={this.state.image} alt={this.state.image}/>\n              <Webcam\n              audio={false}\n              height={350}\n              ref={this.setRef}\n              screenshotFormat=\"image/jpeg\"\n              width={350}\n              videoConstraints={videoConstraints}\n            />\n          </div>\n        )\n      } else {\n        imageOrCall = (\n          <MDBCardImage className=\"justify-content-center img-fluid\" src='/defaultPic.png' waves />\n        )\n      }\n      let modalCall;\n      if(Object.keys(this.state.call).length > 0) {\n        let imageOrCall2 = (<MDBCardImage className=\"justify-content-center img-fluid\"  src='/defaultPic.png' waves />);\n        if(this.state.videoCall === true) {\n          imageOrCall2 = (\n            <div>\n              <Webcam\n                audio={false}\n                height={350}\n                ref={this.setRef}\n                screenshotFormat=\"image/jpeg\"\n                width={350}\n                videoConstraints={videoConstraints}\n                />\n              <img alt='/defaultPic.png' src={this.state.image}/>\n            </div>\n          )\n        }\n        modalCall = (\n          <MDBContainer>\n            <MDBModal  isOpen={this.state.modal2} toggle={()=>{this.cutCall(this.state.call._id)}} side position=\"bottom-right\">\n              <MDBAnimation className=\"slow\" type=\"flash\"  infinite>\n                <MDBModalHeader style={{color:\"green\"}} toggle={this.toggle2}>Calling... {this.state.call.name}</MDBModalHeader>\n              </MDBAnimation>\n              <MDBModalBody>\n                {imageOrCall2}\n                <MDBAnimation type=\"tada\" infinite>\n                <MDBBtn size=\"block\" style={{borderRadius:\"5%\"}} onClick={()=>{this.cutCall(this.state.call._id)}} color=\"danger\" >\n                    <i className=\"fa fa-lg fa-phone-slash\"/>\n                  </MDBBtn>\n                    </MDBAnimation>\n              </MDBModalBody>\n            </MDBModal>\n          </MDBContainer>\n        )\n      }\n      let modalCallIn;\n      if(Object.keys(this.state.inCall).length > 0) {\n        modalCallIn = (\n          <MDBContainer>\n            <MDBModal  isOpen={this.state.modal3} toggle={()=>{this.setState({modal3:!this.state.modal3}); this.stop();}} side position=\"bottom-right\">\n              <MDBAnimation className=\"slow\" type=\"flash\"  infinite>\n                <MDBModalHeader style={{color:\"green\"}} toggle={this.toggle3}>Incomming Call... {this.state.inCall.name}</MDBModalHeader>\n              </MDBAnimation>\n              <MDBModalBody>\n                {imageOrCall}\n                <MDBAnimation type=\"tada\" infinite>\n                <MDBBtn size=\"block\" style={{borderRadius:\"5%\"}} onClick={()=>{this.cutCall(this.state.inCall._id)}} color=\"danger\" >\n                    <i className=\"fa fa-lg fa-phone-slash\"/>\n                  </MDBBtn>\n                    </MDBAnimation>\n              </MDBModalBody>\n              <MDBModalFooter>\n                <MDBCardBody >\n                  <MDBAnimation className=\"slow\" type=\"bounce\" infinite>\n                    <MDBBtn className=\"float-left\" style={{borderRadius:\"30%\"}} onClick={()=>{this.sendSecret(this.state.inCall._id)}} color=\"success\" >\n                      <i className=\"fa fa-lg fa-phone-volume\"/>\n                    </MDBBtn>\n                  </MDBAnimation>\n                  <MDBBtn className=\"float-right\" style={{borderRadius:\"30%\"}} onClick={()=>{this.cutCall(this.state.inCall._id)}} color=\"primary\" >\n                    <i className=\"fa fa-lg fa-microphone-alt-slash\"/>\n                  </MDBBtn>\n                </MDBCardBody>\n              </MDBModalFooter>\n            </MDBModal>\n          </MDBContainer>\n        )\n      }\n      return (\n          <div className=\"container\">\n            <br/>\n            <MDBCardTitle className=\"text-center\">\n              Welcome {this.state.user.name}\n            </MDBCardTitle>\n            <MDBRow className=\"justify-content-center\">\n            <MDBCol md=\"12\">\n              <MDBFormInline onSubmit={(e)=>{ e.preventDefault(); }} className=\"md-form\">\n                <MDBIcon icon=\"search\" />\n                <input onChange={this.onChange} name=\"name\" className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Find Friend\" aria-label=\"Search\" />\n              </MDBFormInline>\n              <MDBCard>\n                {search}\n              </MDBCard>\n            </MDBCol>\n              <MDBCol md=\"6\">\n                <MDBCardTitle>Notifications</MDBCardTitle>\n                <MDBCard>\n                  {notification}\n                </MDBCard>\n              </MDBCol>\n              <br/>\n              <MDBCol md=\"6\">\n                <MDBCardTitle>Friends</MDBCardTitle>\n                <MDBCard>\n                  {friends}\n                </MDBCard>\n              </MDBCol>\n\n            </MDBRow>\n            {modal}\n            {modalCall}\n            {modalCallIn}\n            <MDBContainer>\n              <MDBModal isOpen={this.state.promptForAudio} toggle={this.togglePrompt}>\n                <MDBModalHeader toggle={this.togglePrompt}>Confirm!</MDBModalHeader>\n                <MDBModalBody>\n                  <p>press Ok To Start Call</p>\n                </MDBModalBody>\n                <MDBModalFooter>\n                  <MDBBtn onClick={this.sendAudio} color=\"primary\">Ok</MDBBtn>\n                </MDBModalFooter>\n              </MDBModal>\n            </MDBContainer>\n          </div>\n      );\n    } else {\n      return (\n        <div className=\"d-flex justify-content-center\">\n          <br/>\n          <p className=\"text-monospace\">Generating Rsa Keys</p>\n          <div className=\"spinner-border text-info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default User;\n","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nexport class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  _token = '';\n  state={\n    name:'',\n    email:'',\n    password:'',\n    confirmPassword : '',\n    message: {},\n    isLoading: false\n  }\n  onSubmit = (e) => {\n    this.setState({\n      isLoading:true\n    })\n    var data = {\n      name: this.state.name ,\n      email: this.state.email ,\n      password: this.state.password ,\n      _csrf: this._token\n    }\n    axios({\n      method: 'post',\n      url: '/api/user/signup',\n      data: data\n    }).then((res) => {\n      this.setState({message: res.data,isLoading:false});\n    }).catch((err) => {\n      this.setState({message: err.response.data,isLoading:false});\n    })\n  }\n  componentWillMount() {\n    axios.get('/api/user/signup').then((res)=>{\n      this._token = res.data._token;\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    let info = {};\n    let btnOrLoad;\n    if( !(Object.keys(this.state.message).length === 0) ) {\n      var type = Object.keys(this.state.message)[0];\n      info = {\n        messages: (\n          <Fragment>\n            <div className={\"alert alert-\"+type}>\n              <strong>{this.state.message[type]}</strong>\n            </div>\n          </Fragment>\n        )\n      }\n    }\n    if(this.state.isLoading) {\n      btnOrLoad = (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      )\n    } else {\n      btnOrLoad = (\n        <MDBBtn\n          type=\"button\"\n          gradient=\"blue\"\n          rounded\n          className=\"btn-block z-depth-1a\"\n          onClick={this.onSubmit}\n        >\n          Register\n        </MDBBtn>\n      )\n    }\n    return (\n        <div>\n          <MDBContainer>\n            <br/>\n            <br/>\n            <MDBRow className=\"justify-content-center\">\n              <MDBCol style={{maxWidth:\"600px\"}} md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <div className=\"text-center\">\n                      <h3 className=\"dark-grey-text mb-5\">\n                        <strong>Sign up</strong>\n                      </h3>\n                    </div>\n                    <form>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          label=\"Your name\"\n                          icon=\"user\"\n                          value={this.state.name}\n                          name=\"name\"\n                          onChange={this.onChange}\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        <MDBInput\n                          label=\"Your email\"\n                          icon=\"envelope\"\n                          group\n                          value={this.state.email}\n                          name=\"email\"\n                          onChange={this.onChange}\n                          type=\"email\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        <MDBInput\n                          label=\"Your password\"\n                          icon=\"lock\"\n                          group\n                          value={this.state.password}\n                          name=\"password\"\n                          onChange={this.onChange}\n                          type=\"password\"\n                          validate\n                        />\n                        <MDBInput\n                          label=\"Confirm password\"\n                          icon=\"lock\"\n                          value={this.state.confirmPassword}\n                          name=\"confirmPassword\"\n                          onChange={this.onChange}\n                          group\n                          type=\"password\"\n                          validate\n                        />\n                      </div>\n                      {info['messages']}\n                      <div className=\"text-center py-4 mt-3\">\n                        {btnOrLoad}\n                      </div>\n                    </form>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n    );\n  }\n};\n","import React from 'react';\nimport { MDBCol, MDBFormInline, MDBIcon, MDBBtn, MDBCard, MDBCardBody,MDBCardFooter } from 'mdbreact';\nimport utils from './utils'\nclass Groupchat extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      room : 'No Room Joined',\n      message: ''\n    }\n    this.messages = [];\n    this.onChangeMess = this.onChangeMess.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.join = this.join.bind(this);\n  }\n  onChange = (e) => {\n    this.setState({\n      room: e.target.value\n    })\n  }\n  sendMessage() {\n    this.props.socket.emit(this.state.room,{message:this.state.message,userName:this.props.user.name});\n    this.setState({\n      message:''\n    })\n  }\n  onChangeMess = (e) => {\n    this.setState({\n      message: e.target.value\n    })\n  }\n  join() {\n    this.props.socket.on(this.state.room,(mes)=>{\n      this.messages.push(mes);\n    })\n    this.props.socket.emit(this.state.room,{message: 'hi i am '+this.props.user.name});\n  }\n  render() {\n    var messages = [];\n    for(var mes of this.messages) {\n      messages.push((\n        <div key={utils.randomString(32)}>\n        <h1>{mes.name}</h1>\n        <p>{mes.messages}</p>\n        </div>\n      ))\n    }\n    if(!this.props.user) {\n      return (\n        <div>You need to signin</div>\n      )\n    } else {\n      return (\n        <div className=\"container\">\n          <MDBFormInline className=\"md-form\">\n            <MDBIcon icon=\"search\" />\n              <input onChange={this.onChange} className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Type Room name\" aria-label=\"Search\" /><MDBBtn style={{borderRadius:\"50%\"}} onClick={this.join} color=\"primary\">Join Room</MDBBtn>\n            </MDBFormInline>\n            <MDBCol>\n            <MDBCard>\n              <MDBCardBody>\n                {messages}\n              </MDBCardBody>\n              <MDBCardFooter>\n                <input onChange={this.onChangeMess} className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Message\" aria-label=\"Search\" /><MDBBtn style={{borderRadius:\"5%\"}} onClick={this.sendMessage} color=\"success\">send Message</MDBBtn>\n              </MDBCardFooter>\n            </MDBCard>\n          </MDBCol>\n        </div>\n\n\n      )\n    }\n  }\n}\n\n\nexport default Groupchat;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MDBCard, MDBContainer,MDBCardBody } from 'mdbreact';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login'\nimport Test from './components/Test'\nimport User from './components/User'\nimport { Signup } from './components/Signup'\nimport Groupchat from './components/Groupchat'\nimport axios from 'axios';\n\nclass Video extends Component {\n  render() {\n    return (\n      <MDBContainer>\n        <MDBCard>\n          <MDBCardBody>\n            <div className=\"embed-responsive embed-responsive-16by9\">\n              <iframe title=\"screen\" className=\"embed-responsive-item\" src=\"/presentation.mp4\" allowfullscreen></iframe>\n            </div>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBContainer>\n    )\n  }\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      user: {}\n    }\n    this.logOut = this.logOut.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n  componentDidMount() {\n    axios.get('/api/user/user').then((res)=>{\n      this.setState({\n        user:res.data.user,\n        isLogin: true\n      })\n    }).catch((err) => {\n      console.log(err.response.data);\n    });\n  }\n  logIn() {\n    axios.get('/api/user/user').then((res)=>{\n      this.setState({\n        user:res.data.user,\n        isLogin: true\n      })\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n  logOut() {\n    this.setState({isLogin:false,user:{}})\n  }\n  render() {\n    return (\n        <div>\n          <Route path = '/' component={(props) => (<Navbar {...props} logOut={this.logOut} isLogin={this.state.isLogin}/>)}/>\n          <Switch>\n            <Route path = '/signin' component = {(props) => (<Login logIn={this.logIn} {...props} />)} />\n            <Route path = '/signup' component = {Signup} />\n            <Route path = '/User' component = {(props) => (<User user={this.state.user} socket={this.props.socket} {...props} />)} />\n            <Route path = '/test' component = {Test} />\n            <Route path = '/groupchat' component = {(props) => (<Groupchat user={this.state.user} socket={this.props.socket} {...props} />)} />\n            <Route path = '/' component = {Video} />\n          </Switch>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { SocketProvider } from 'socket.io-react';\nimport {proxy} from '../package.json'\nimport io from 'socket.io-client';\nimport p2p from 'socket.io-p2p';\nimport * as serviceWorker from './serviceWorker';\nconst socket = io(proxy);\nconst p2pCon = new p2p(socket,{numClients:6});\np2pCon.usePeerConnection = true;\n\nReactDOM.render(\n    <BrowserRouter>\n      <SocketProvider socket={p2pCon}>\n        <App socket={p2pCon}/>\n      </SocketProvider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1a21cc66.jpg\";"],"sourceRoot":""}